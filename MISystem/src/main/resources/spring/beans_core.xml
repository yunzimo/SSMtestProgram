<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		                    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
							http://www.springframework.org/schema/aop
							http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
                            http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context-4.1.xsd ">

    <context:component-scan base-package="com.yunzimo">
        <!--  不去扫描@Controller注解 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    <!--
         ioc 思想就是管理工程中的对象
         数据源也是一种java对象  所以放入到容器中管理数据源对象
     -->
    <!-- 外部读取 properties 配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 构建数据源 -->
    <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${url}"/>
        <property name="password" value="${password}"/>
        <property name="user" value="${username}"/>
        <property name="driverClass" value="${driver}"/>
    </bean>

    <!--
        在mybatis中 通过读取mybatis的主配置文件获取了工厂对象，spring需要去管理
        mybatis的工厂对象
        必须使用 mybatis-spring.jar
     -->
     <bean name="sessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">
          <!-- mybatis 中我们构建工厂的时候需要数据源对象 -->
         <property name="dataSource" ref="dataSource"/>
         <!-- mybatis 中我们构建工厂的时候需要mapper.xml配置文件 -->
         <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
         <!-- 加载我们的主配置文件 -->
         <property name="configLocation" value="classpath:mybatis/MybatisConfig.xml"/>
         <!-- 别名的设定 mapper.xml 中直接使用类名就可以了  -->
         <property name="typeAliasesPackage" value="com.yunzimo.Bean"/>
         <!--分页插件的配置 -->
          <property name="plugins">
             <array>
                 <bean class="com.github.pagehelper.PageInterceptor"/>
             </array>
          </property>
     </bean>

     <!--
         执行接口中方法的对象 接口的代理对象，在执行具体的sql方法的时候，添加了事务管理
         需要将所有的接口的代理对象交给我们的spring容器管理

         直接在我们的service 中使用Mapper接口 容器给我们注入的是接口的代理对象
         接口的子类对象。
      -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
        <property name="basePackage" value="com.yunzimo.mapper"/>
    </bean>



</beans>